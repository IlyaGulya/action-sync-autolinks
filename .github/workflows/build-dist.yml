name: Build and Update Dist

on:
  push:
    branches: [ master ]

jobs:
  build-dist:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run typecheck
      run: bun run typecheck

    - name: Run tests
      run: bun test

    - name: Build project
      run: bun run build

    - name: Check for changes in dist
      id: verify-changed-files
      # language=bash
      run: |
        if [ -n "$(git status --porcelain dist/)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Bump version and commit
      if: steps.verify-changed-files.outputs.changed == 'true'
      id: bump-version
      # language=bash
      run: |
        CURRENT_VERSION=$(jq -r '.version' package.json)
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        jq --arg version "$NEW_VERSION" '.version = $version' package.json > package.json.tmp
        mv package.json.tmp package.json
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Bumped version from $CURRENT_VERSION to $NEW_VERSION"

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dist/ package.json
        git commit -m "release $NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push --follow-tags

    - name: Create GitHub Release
      if: steps.verify-changed-files.outputs.changed == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # language=bash
      run: |
        gh release create "v${{ steps.bump-version.outputs.new_version }}" \
          --title "v${{ steps.bump-version.outputs.new_version }}" \
          --generate-notes
